---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    # Default set from Docker, without DAC_OVERRIDE or CHOWN
    - FOWNER
    - FSETID
    - KILL
    - SETGID
    - SETUID
    - SETPCAP
    - NET_BIND_SERVICE
    - NET_RAW
    - SYS_CHROOT
    - MKNOD
    - AUDIT_WRITE
    - SETFCAP
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  seLinux:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
  readOnlyRootFilesystem: false
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/tests/test-podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: open-match-grafana-test
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
spec:
  allowPrivilegeEscalation: true
  privileged: false
  hostNetwork: false
  hostIPC: false
  hostPID: false
  fsGroup:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: RunAsAny
  runAsUser:
    rule: RunAsAny
  volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - projected
  - secret
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
type: Opaque
data:
  admin-user: "YWRtaW4="
  admin-password: "b3Blbm1hdGNo"
  ldap-toml: ""
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/configmap-dashboard-provider.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
  name: open-match-grafana-config-dashboards
  namespace: open-match
data:
  provider.yaml: |-
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      options:
        path: /tmp/dashboards
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
data:
  plugins: grafana-piechart-panel
  grafana.ini: |
    [analytics]
    check_for_updates = true
    [grafana_net]
    url = https://grafana.net
    [log]
    mode = console
    [paths]
    data = /var/lib/grafana/data
    logs = /var/log/grafana
    plugins = /var/lib/grafana/plugins
    provisioning = /etc/grafana/provisioning

  datasources.yaml: |
    apiVersion: 1
    datasources:
    - access: proxy
      isDefault: true
      name: Prometheus
      type: prometheus
      url: http://open-match-prometheus-server.open-match.svc.cluster.local:80/
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/tests/test-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-match-grafana-test
  labels:
    app: open-match-grafana
    chart: "grafana-3.5.7"
    heritage: "Helm"
    release: "open-match"
data:
  run.sh: |-
    @test "Test Health" {
      url="http://open-match-grafana/api/health"

      code=$(curl -s -o /dev/null -I -w "%{http_code}" $url)
      [ "$code" == "200" ]
    }
---
# Source: open-match/charts/open-match-telemetry/templates/default-grafana-dashboards.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: v1
kind: ConfigMap
metadata:
  name: open-match-dashboards
  labels:
     grafana_dashboard: "1"
data:
  go-processes.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Process status published by Go Prometheus client library, e.g. memory used, fds open, GC details",
      "editable": true,
      "gnetId": 6671,
      "graphTooltip": 0,
      "id": 4,
      "iteration": 1579812301012,
      "links": [],
      "panels": [
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "description": "Current CPU usage to Pod memory resource limit in percentage",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 0
          },
          "id": 10,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "max",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (pod_name) (\n  sum(\n    rate(container_cpu_usage_seconds_total{pod_name=~\"om-.*\", container_name!=\"POD\"}[5m])\n  ) by (pod_name, container_name) \n  \n  /\n  \n  sum(\n    container_spec_cpu_quota{pod_name=~\"om-.*\", container_name!=\"POD\"} / container_spec_cpu_period{pod_name=~\"om-.*\", container_name!=\"POD\"}\n  ) by (pod_name, container_name) \n  \n  * \n  \n  100\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{pod_name}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "CPU Usage Limit Percentage",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 0
          },
          "id": 7,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component) (go_goroutines{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}}",
              "metric": "go_goroutines",
              "refId": "A",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Go Routines",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 8
          },
          "id": 1,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "resident",
              "yaxis": 2
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component,app) (process_resident_memory_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - resident",
              "metric": "process_resident_memory_bytes",
              "refId": "A",
              "step": 4
            },
            {
              "expr": "avg by (component,app) (process_virtual_memory_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - virtual",
              "metric": "process_virtual_memory_bytes",
              "refId": "B",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Process Memory",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 8
          },
          "id": 4,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "resident",
              "yaxis": 1
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component) (deriv(process_resident_memory_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"}[$interval]))",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - resident",
              "metric": "process_resident_memory_bytes",
              "refId": "A",
              "step": 4
            },
            {
              "expr": "avg by (component) (deriv(process_virtual_memory_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"}[$interval]))",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - virtual",
              "metric": "process_virtual_memory_bytes",
              "refId": "B",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Process Memory Derivative",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 16
          },
          "id": 2,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "alloc rate",
              "yaxis": 2
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component) (go_memstats_alloc_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - bytes allocated",
              "metric": "go_memstats_alloc_bytes",
              "refId": "A",
              "step": 4
            },
            {
              "expr": "avg by (component) (rate(go_memstats_alloc_bytes_total{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"}[$interval]))",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - alloc rate",
              "metric": "go_memstats_alloc_bytes_total",
              "refId": "B",
              "step": 4
            },
            {
              "expr": "avg by (component) (go_memstats_stack_inuse_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - stack inuse",
              "metric": "go_memstats_stack_inuse_bytes",
              "refId": "C",
              "step": 4
            },
            {
              "expr": "avg by (component) (go_memstats_heap_inuse_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "hide": false,
              "intervalFactor": 2,
              "legendFormat": "{{component}} - heap inuse",
              "metric": "go_memstats_heap_inuse_bytes",
              "refId": "D",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Go Memstats",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 16
          },
          "id": 5,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "alloc rate",
              "yaxis": 2
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component) (deriv(go_memstats_alloc_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"}[$interval]))",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - bytes allocated",
              "metric": "go_memstats_alloc_bytes",
              "refId": "A",
              "step": 4
            },
            {
              "expr": "avg by (component) (deriv(go_memstats_stack_inuse_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"}[$interval]))",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}} - stack inuse",
              "metric": "go_memstats_stack_inuse_bytes",
              "refId": "C",
              "step": 4
            },
            {
              "expr": "avg by (component) (deriv(go_memstats_heap_inuse_bytes{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"}[$interval]))",
              "format": "time_series",
              "hide": false,
              "intervalFactor": 2,
              "legendFormat": "{{component}} - heap inuse",
              "metric": "go_memstats_heap_inuse_bytes",
              "refId": "D",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Go Memstats Derivative",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "Bps",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 24
          },
          "id": 3,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component) (process_open_fds{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}}",
              "metric": "process_open_fds",
              "refId": "A",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Open File Descriptors",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 24
          },
          "id": 6,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component) (deriv(process_open_fds{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"}[$interval]))",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}}",
              "metric": "process_open_fds",
              "refId": "A",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Open File Descriptors Derivative",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 32
          },
          "id": 8,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg by (component, quantile) (go_gc_duration_seconds{app=~\"open-match\", kubernetes_pod_name=~\"om-.*\"})",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{component}}: {{quantile}}",
              "metric": "go_gc_duration_seconds",
              "refId": "A",
              "step": 4
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "GC Duration Quantiles",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "s",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "30s",
      "schemaVersion": 18,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": ".*",
            "current": {
              "text": "All",
              "value": "$__all"
            },
            "datasource": "Prometheus",
            "definition": "",
            "hide": 0,
            "includeAll": true,
            "label": null,
            "multi": true,
            "name": "namespace",
            "options": [],
            "query": "label_values(go_memstats_alloc_bytes, namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": ".*",
            "current": {
              "text": "All",
              "value": "$__all"
            },
            "datasource": "Prometheus",
            "definition": "",
            "hide": 0,
            "includeAll": true,
            "label": null,
            "multi": true,
            "name": "pod",
            "options": [],
            "query": "label_values(process_resident_memory_bytes, pod)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 0,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "auto": false,
            "auto_count": 30,
            "auto_min": "10s",
            "current": {
              "text": "5m",
              "value": "5m"
            },
            "datasource": null,
            "hide": 0,
            "includeAll": false,
            "label": "",
            "multi": false,
            "name": "interval",
            "options": [
              {
                "selected": false,
                "text": "1m",
                "value": "1m"
              },
              {
                "selected": true,
                "text": "5m",
                "value": "5m"
              },
              {
                "selected": false,
                "text": "10m",
                "value": "10m"
              },
              {
                "selected": false,
                "text": "30m",
                "value": "30m"
              },
              {
                "selected": false,
                "text": "1h",
                "value": "1h"
              }
            ],
            "query": "1m,5m,10m,30m,1h",
            "refresh": 2,
            "skipUrlSync": false,
            "type": "interval"
          }
        ]
      },
      "time": {
        "from": "now-15m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "browser",
      "title": "Go Processes",
      "uid": "ypFZFgvmz",
      "version": 1
    }
  grpc.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": 2,
      "iteration": 1580944984710,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 25,
          "panels": [],
          "title": "gRPC Overview",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 0,
            "y": 1
          },
          "id": 13,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum by (grpc_client_method)(rate(grpc_io_client_completed_rpcs[$timewindow]))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "{{grpc_client_method}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client Request Rate",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": null,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 9,
            "w": 12,
            "x": 12,
            "y": 1
          },
          "id": 6,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "sideWidth": null,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum by (grpc_server_method)(rate(grpc_io_server_completed_rpcs[$timewindow]))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "Method: {{grpc_server_method}} ",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Server Request Rate",
          "tooltip": {
            "shared": true,
            "sort": 2,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 21,
          "interval": "",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "hideEmpty": false,
            "hideZero": false,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum by (method) (\n  label_replace(\n    sum by (grpc_server_method) (rate(grpc_io_server_completed_rpcs{grpc_server_status!=\"OK\"}[$timewindow])), \n    \"method\", \n    \"$1\", \n    \"grpc_server_method\", \n    \"(.*)\"\n  )\nor\n  label_replace(\n    sum by (grpc_client_method) (rate(grpc_io_client_completed_rpcs{grpc_client_status!=\"OK\"}[$timewindow])), \n    \"method\", \n    \"$1\", \n    \"grpc_client_method\", \n    \"(.*)\"\n  )\n)\n/\nsum by (method) (\n  label_replace(\n    sum by (grpc_server_method) (rate(grpc_io_server_completed_rpcs[$timewindow])), \n    \"method\", \n    \"$1\", \n    \"grpc_server_method\", \n    \"(.*)\"\n  )\nor\n  label_replace(\n    sum by (grpc_client_method) (rate(grpc_io_client_completed_rpcs[$timewindow])), \n    \"method\", \n    \"$1\", \n    \"grpc_client_method\", \n    \"(.*)\"\n  )\n) * 100\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{method}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "gRPC Error Rate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 55,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(\n  sum by (method) (\n    label_replace(\n      rate(grpc_io_server_received_bytes_per_rpc_sum[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      rate(grpc_io_client_sent_bytes_per_rpc_sum[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  )\n  \n  /\n  \n  sum by (method) (\n    label_replace(\n      rate(grpc_io_server_received_bytes_per_rpc_count[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      rate(grpc_io_client_sent_bytes_per_rpc_count[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  )\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Input Per Second",
              "refId": "A"
            },
            {
              "expr": "sum(\n  sum by (method) (\n    label_replace(\n      rate(grpc_io_server_sent_bytes_per_rpc_sum[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      rate(grpc_io_client_received_bytes_per_rpc_sum[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  )\n  \n  /\n  \n  sum by (method) (\n    label_replace(\n      rate(grpc_io_server_sent_bytes_per_rpc_count[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      rate(grpc_io_client_received_bytes_per_rpc_count[$timewindow]), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  )\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Output Per Second",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Network IO per second",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "decbytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 18
          },
          "id": 57,
          "panels": [],
          "title": "openmatch.QueryService/QueryTickets",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 19
          },
          "id": 59,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.QueryService/QueryTickets",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 19
          },
          "id": 58,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.QueryService/QueryTickets",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 27
          },
          "id": 60,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.QueryService/QueryTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.QueryService/QueryTickets",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 35
          },
          "id": 29,
          "panels": [],
          "title": "openmatch.BackendService/AssignTickets",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 36
          },
          "id": 26,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.BackendService/AssignTickets",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 36
          },
          "id": 27,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.Backend/AssignTickets",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 44
          },
          "id": 12,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/AssignTickets\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.BackendService/AssignTickets",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 52
          },
          "id": 31,
          "panels": [],
          "repeat": null,
          "title": "openmatch.FrontendService/CreateTicket",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 53
          },
          "id": 32,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.FrontendService/CreateTicket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 53
          },
          "id": 33,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.FrontendService/CreateTicket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 61
          },
          "id": 34,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/CreateTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.FrontendService/CreateTicket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 69
          },
          "id": 38,
          "panels": [],
          "title": "openmatch.Evaluator/Evaluate",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 70
          },
          "id": 45,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.Evaluator/Evaluate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 70
          },
          "id": 43,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.Evaluator/Evaluate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 78
          },
          "id": 44,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.Evaluator/Evaluate\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.Evaluator/Evaluate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 86
          },
          "id": 40,
          "panels": [],
          "title": "openmatch.MatchFunction/Run",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 87
          },
          "id": 46,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.MatchFunction/Run",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 87
          },
          "id": 47,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.MatchFunction/Run",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 95
          },
          "id": 19,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.MatchFunction/Run\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.MatchFunction/Run",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 103
          },
          "id": 42,
          "panels": [],
          "title": "openmatch.BackendService/FetchMatches",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 104
          },
          "id": 48,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/CreateTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.BackendService/FetchMatches",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 104
          },
          "id": 49,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.BackendService/FetchMatches",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 112
          },
          "id": 14,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.BackendService/FetchMatches\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.BackendService/FetchMatches",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 120
          },
          "id": 36,
          "panels": [],
          "title": "openmatch.Synchronizer/Synchronize",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 121
          },
          "id": 50,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.internal.Synchronizer/Synchronize",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 121
          },
          "id": 51,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.internal.Synchronizer/Synchronize",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 129
          },
          "id": 15,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.internal.Synchronizer/Synchronize\"}[$timewindow])) by (grpc_client_method, le))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.internal.Synchronizer/Synchronize",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 137
          },
          "id": 23,
          "panels": [],
          "title": "openmatch.FrontendService/DeleteTicket",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 138
          },
          "id": 52,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "instant": false,
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_sent_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_received_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Sent per Call: openmatch.FrontendService/DeleteTicket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 138
          },
          "id": 53,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_received_bytes_per_rpc_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_sent_bytes_per_rpc_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Bytes Received per Call: openmatch.FrontendService/DeleteTicket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 146
          },
          "id": 16,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(\n  0.999,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile Latency",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(\n  0.99,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile Latency",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(\n  0.95,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile Latency",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(\n  0.90,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile Latency",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(\n  0.50,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile Latency",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(\n  0.10,\n  sum(\n    label_replace(\n      sum(rate(grpc_io_client_roundtrip_latency_bucket{grpc_client_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_client_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_client_method\", \n      \"(.*)\"\n    )\n  or\n    label_replace(\n      sum(rate(grpc_io_server_server_latency_bucket{grpc_server_method=\"openmatch.FrontendService/DeleteTicket\"}[$timewindow])) by (grpc_server_method, le), \n      \"method\", \n      \"$1\", \n      \"grpc_server_method\", \n      \"(.*)\"\n    )\n  ) by (method, le)\n)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile Latency",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Client RTT: openmatch.FrontendService/DeleteTicket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": "0",
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "5s",
      "schemaVersion": 18,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {
              "text": "5m",
              "value": "5m"
            },
            "hide": 0,
            "includeAll": false,
            "label": "Time Window",
            "multi": false,
            "name": "timewindow",
            "options": [
              {
                "selected": true,
                "text": "5m",
                "value": "5m"
              },
              {
                "selected": false,
                "text": "10m",
                "value": "10m"
              },
              {
                "selected": false,
                "text": "15m",
                "value": "15m"
              },
              {
                "selected": false,
                "text": "30m",
                "value": "30m"
              },
              {
                "selected": false,
                "text": "1h",
                "value": "1h"
              },
              {
                "selected": false,
                "text": "4h",
                "value": "4h"
              }
            ],
            "query": "5m,10m,15m,30m,1h,4h",
            "skipUrlSync": false,
            "type": "custom"
          }
        ]
      },
      "time": {
        "from": "now-3h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "gRPC",
      "uid": "nlrmG_Cmk",
      "version": 1
    }
  match-making.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "links": [],
      "panels": [
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 10,
          "panels": [],
          "title": "Frontend",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 1
          },
          "id": 12,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_frontend_total_bytes_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_frontend_total_bytes_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_frontend_total_bytes_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_frontend_total_bytes_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_frontend_total_bytes_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_frontend_total_bytes_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Total Bytes per Ticket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 1
          },
          "id": 14,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_frontend_searchfields_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_frontend_searchfields_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_frontend_searchfields_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_frontend_searchfields_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_frontend_searchfields_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_frontend_searchfields_per_ticket_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "SearchFields per Ticket",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 8,
          "panels": [],
          "title": "Backend",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 10
          },
          "id": 15,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(open_match_dev_backend_tickets_assigned[5m]))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "assigned",
              "refId": "A"
            },
            {
              "expr": "sum(rate(open_match_dev_backend_tickets_released[5m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "released",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Ticket Assigned/Release Rate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 10
          },
          "id": 16,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_backend_tickets_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_backend_tickets_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_backend_tickets_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_backend_tickets_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_backend_tickets_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_backend_tickets_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Tickets per Match",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 18
          },
          "id": 13,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_backend_total_bytes_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_backend_total_bytes_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_backend_total_bytes_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_backend_total_bytes_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_backend_total_bytes_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_backend_total_bytes_per_match_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Total Bytes per Match",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "bytes",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "collapsed": false,
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 26
          },
          "id": 6,
          "panels": [],
          "title": "Query",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 27
          },
          "id": 19,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "open_match_dev_query_total_cached_items",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Total: {{kubernetes_pod_name}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Query Cache Items",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 27
          },
          "id": 30,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": true,
            "min": true,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(open_match_dev_query_total_fetched_items[5m])",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "Total: {{kubernetes_pod_name}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Query Cache Fetch Rate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 35
          },
          "id": 17,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_query_tickets_per_query_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_query_tickets_per_query_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_query_tickets_per_query_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_query_tickets_per_query_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_query_tickets_per_query_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_query_tickets_per_query_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Tickets per Query",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 35
          },
          "id": 22,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_query_waiting_requests_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_query_waiting_requests_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_query_waiting_requests_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_query_waiting_requests_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_query_waiting_requests_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_query_waiting_requests_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Query Cache Waiting Requests",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": null,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 43
          },
          "id": 23,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_query_update_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_query_update_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_query_update_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_query_update_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_query_update_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_query_update_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Query Cache Update Latency",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "decimals": 2,
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 43
          },
          "id": 21,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(open_match_dev_query_cache_updates[5m])",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{kubernetes_pod_name}}",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Query Cache Update Rate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 2,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "decimals": null,
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 51
          },
          "id": 4,
          "title": "Evaluator",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 52
          },
          "id": 24,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_evaluator_matches_per_request_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_evaluator_matches_per_request_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_evaluator_matches_per_request_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_evaluator_matches_per_request_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_evaluator_matches_per_request_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_evaluator_matches_per_request_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Matches per Evaluate Request",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 52
          },
          "id": 25,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_evaluator_matches_per_response_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_evaluator_matches_per_response_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_evaluator_matches_per_response_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_evaluator_matches_per_response_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_evaluator_matches_per_response_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_evaluator_matches_per_response_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Matches per Evaluate Response",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": 0,
          "description": "Only applies when using the default evaluator",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 60
          },
          "id": 26,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "avg(rate(open_match_dev_defaulteval_collided_matches_per_call[5m]))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Collided Matches per Evaluate",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": 0,
              "format": "none",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 68
          },
          "id": 2,
          "title": "Synchronizer",
          "type": "row"
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": null,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 69
          },
          "id": 29,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_synchronizer_registration_mmf_done_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_synchronizer_registration_mmf_done_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_synchronizer_registration_mmf_done_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_synchronizer_registration_mmf_done_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_synchronizer_registration_mmf_done_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_synchronizer_registration_mmf_done_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Synchronizer Registration MMF Done Time",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": null,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 12,
            "y": 69
          },
          "id": 28,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_synchronizer_registration_wait_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_synchronizer_registration_wait_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_synchronizer_registration_wait_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_synchronizer_registration_wait_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_synchronizer_registration_wait_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_synchronizer_registration_wait_time_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Synchronizer Registration Wait Time",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "decimals": null,
          "description": "",
          "fill": 0,
          "gridPos": {
            "h": 8,
            "w": 12,
            "x": 0,
            "y": 77
          },
          "id": 27,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "histogram_quantile(0.999, sum(rate(open_match_dev_synchronizer_iteration_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 1,
              "legendFormat": "99.9%-ile",
              "refId": "A"
            },
            {
              "expr": "histogram_quantile(0.99, sum(rate(open_match_dev_synchronizer_iteration_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "99%-ile",
              "refId": "B"
            },
            {
              "expr": "histogram_quantile(0.95, sum(rate(open_match_dev_synchronizer_iteration_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "95%-ile",
              "refId": "C"
            },
            {
              "expr": "histogram_quantile(0.90, sum(rate(open_match_dev_synchronizer_iteration_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "90%-ile",
              "refId": "D"
            },
            {
              "expr": "histogram_quantile(0.50, sum(rate(open_match_dev_synchronizer_iteration_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "50%-ile",
              "refId": "F"
            },
            {
              "expr": "histogram_quantile(0.10, sum(rate(open_match_dev_synchronizer_iteration_latency_bucket[5m])) by (le))\n",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "10%-ile",
              "refId": "H"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Synchronizer Iteration Latency",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "decimals": null,
              "format": "ms",
              "label": null,
              "logBase": 2,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "schemaVersion": 18,
      "style": "dark",
      "tags": [],
      "templating": {
        "list": []
      },
      "time": {
        "from": "now-30m",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "",
      "title": "Match Making",
      "uid": "B-nxSgqWz",
      "version": 1
    }
  redis.json: |-
    {
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "type": "dashboard"
          }
        ]
      },
      "description": "Redis Dashboard",
      "editable": true,
      "gnetId": 763,
      "graphTooltip": 0,
      "id": 6,
      "iteration": 1580946687856,
      "links": [],
      "panels": [
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "datasource": "Prometheus",
          "decimals": 0,
          "editable": true,
          "error": false,
          "format": "s",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": false,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 7,
            "w": 2,
            "x": 0,
            "y": 0
          },
          "id": 9,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "max(max_over_time(redis_uptime_in_seconds{instance=~\"$instance\"}[$__interval]))",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "",
              "metric": "",
              "refId": "A",
              "step": 1800
            }
          ],
          "thresholds": "",
          "title": "Uptime",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "70%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(245, 54, 54, 0.9)"
          ],
          "datasource": "Prometheus",
          "decimals": 0,
          "editable": true,
          "error": false,
          "format": "percent",
          "gauge": {
            "maxValue": 100,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 2,
            "y": 0
          },
          "hideTimeOverride": true,
          "id": 11,
          "interval": null,
          "isNew": true,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "100 * (redis_memory_used_bytes{instance=~\"$instance\"}  / redis_memory_max_bytes{instance=~\"$instance\"} )",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "",
              "metric": "",
              "refId": "A",
              "step": 2
            }
          ],
          "thresholds": "80,95",
          "timeFrom": "1m",
          "timeShift": null,
          "title": "Memory Usage",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "cacheTimeout": null,
          "colorBackground": false,
          "colorValue": false,
          "colors": [
            "#299c46",
            "rgba(237, 129, 40, 0.89)",
            "#d44a3a"
          ],
          "datasource": "Prometheus",
          "format": "none",
          "gauge": {
            "maxValue": null,
            "minValue": 0,
            "show": true,
            "thresholdLabels": false,
            "thresholdMarkers": true
          },
          "gridPos": {
            "h": 7,
            "w": 3,
            "x": 5,
            "y": 0
          },
          "id": 5,
          "interval": null,
          "links": [],
          "mappingType": 1,
          "mappingTypes": [
            {
              "name": "value to text",
              "value": 1
            },
            {
              "name": "range to text",
              "value": 2
            }
          ],
          "maxDataPoints": 100,
          "nullPointMode": "connected",
          "nullText": null,
          "options": {},
          "pluginVersion": "6.2.4",
          "postfix": "",
          "postfixFontSize": "50%",
          "prefix": "",
          "prefixFontSize": "50%",
          "rangeMaps": [
            {
              "from": "null",
              "text": "N/A",
              "to": "null"
            }
          ],
          "sparkline": {
            "fillColor": "rgba(31, 118, 189, 0.18)",
            "full": false,
            "lineColor": "rgb(31, 120, 193)",
            "show": true
          },
          "tableColumn": "",
          "targets": [
            {
              "expr": "sum(redis_db_keys{db=\"db0\"})",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "db keys",
              "refId": "A",
              "step": 240,
              "target": ""
            }
          ],
          "thresholds": "15000,30000",
          "timeFrom": null,
          "timeShift": null,
          "title": "Total DB Items",
          "transparent": true,
          "type": "singlestat",
          "valueFontSize": "80%",
          "valueMaps": [
            {
              "op": "=",
              "text": "N/A",
              "value": "null"
            }
          ],
          "valueName": "current"
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "fill": 0,
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 8,
            "y": 0
          },
          "id": 14,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pluginVersion": "6.2.4",
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [
            {
              "alias": "limit",
              "color": "#C4162A",
              "hideTooltip": true,
              "legend": false,
              "nullPointMode": "connected"
            },
            {
              "alias": "request",
              "color": "#73BF69",
              "hideTooltip": true,
              "legend": false,
              "nullPointMode": "connected"
            }
          ],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum(rate(container_cpu_usage_seconds_total{pod_name=~\"om-redis.*\", name!~\".*prometheus.*\", image!=\"\", container_name!=\"POD\"}[5m])) by (pod_name)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "{{pod_name}} usage",
              "refId": "A"
            },
            {
              "expr": "sum(kube_pod_container_resource_limits_cpu_cores{pod=~\"om-redis.*\"}) by (pod)",
              "format": "time_series",
              "hide": false,
              "intervalFactor": 1,
              "legendFormat": "limit",
              "refId": "B"
            },
            {
              "expr": "sum(kube_pod_container_resource_requests_cpu_cores{pod=~\"om-redis.*\"}) by (pod)",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "request",
              "refId": "C"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "CPU Usage",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": "core",
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {
            "max": "#BF1B00"
          },
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 8,
            "x": 16,
            "y": 0
          },
          "id": 7,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": false,
            "current": true,
            "hideEmpty": false,
            "hideZero": false,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null as zero",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "redis_memory_used_bytes",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{kubernetes_pod_name}} used",
              "metric": "",
              "refId": "A",
              "step": 240,
              "target": ""
            },
            {
              "expr": "redis_memory_max_bytes",
              "format": "time_series",
              "hide": false,
              "intervalFactor": 2,
              "legendFormat": "{{kubernetes_pod_name}} max",
              "refId": "B",
              "step": 240
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Total Memory Usage",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": 0,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "decimals": 2,
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 0,
            "y": 7
          },
          "id": 1,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": true,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(redis_keyspace_hits_total[5m])",
              "format": "time_series",
              "hide": false,
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "{{kubernetes_pod_name}} hits",
              "metric": "",
              "refId": "A",
              "step": 240,
              "target": ""
            },
            {
              "expr": "rate(redis_keyspace_misses_total[5m])",
              "format": "time_series",
              "hide": false,
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "{{kubernetes_pod_name}} misses",
              "metric": "",
              "refId": "B",
              "step": 240,
              "target": ""
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Hits / Misses per Sec",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": "",
              "logBase": 1,
              "max": null,
              "min": 0,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 12,
            "y": 7
          },
          "id": 2,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "sort": "current",
            "sortDesc": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(redis_commands_total{cmd!~\"info|slowlog|client|latency|replconf|config\"}[5m])",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "{{cmd}} - {{kubernetes_pod_name}}",
              "metric": "A",
              "refId": "A",
              "step": 240,
              "target": ""
            },
            {
              "expr": "sum by (kubernetes_pod_name) (rate(redis_commands_total[5m]))",
              "format": "time_series",
              "intervalFactor": 1,
              "legendFormat": "total - {{kubernetes_pod_name}}",
              "refId": "B"
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Commands Executed / sec",
          "tooltip": {
            "msResolution": false,
            "shared": true,
            "sort": 2,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "editable": true,
          "error": false,
          "fill": 0,
          "grid": {},
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 0,
            "y": 14
          },
          "id": 10,
          "isNew": true,
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": false,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "connected",
          "options": {},
          "percentage": false,
          "pointradius": 5,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "rate(redis_net_input_bytes_total[5m])",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{kubernetes_pod_name}} input",
              "refId": "A",
              "step": 240
            },
            {
              "expr": "rate(redis_net_output_bytes_total[5m])",
              "format": "time_series",
              "interval": "",
              "intervalFactor": 2,
              "legendFormat": "{{kubernetes_pod_name}} output",
              "refId": "B",
              "step": 240
            }
          ],
          "thresholds": [],
          "timeFrom": null,
          "timeRegions": [],
          "timeShift": null,
          "title": "Network I/O",
          "tooltip": {
            "msResolution": true,
            "shared": true,
            "sort": 0,
            "value_type": "cumulative"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "bytes",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        },
        {
          "aliasColors": {},
          "bars": false,
          "cacheTimeout": null,
          "dashLength": 10,
          "dashes": false,
          "datasource": "Prometheus",
          "fill": 0,
          "gridPos": {
            "h": 7,
            "w": 12,
            "x": 12,
            "y": 14
          },
          "hideTimeOverride": false,
          "id": 12,
          "interval": "",
          "legend": {
            "alignAsTable": true,
            "avg": true,
            "current": true,
            "max": true,
            "min": false,
            "rightSide": true,
            "show": true,
            "total": false,
            "values": true
          },
          "lines": true,
          "linewidth": 1,
          "links": [],
          "nullPointMode": "null",
          "options": {},
          "percentage": false,
          "pointradius": 2,
          "points": false,
          "renderer": "flot",
          "seriesOverrides": [],
          "spaceLength": 10,
          "stack": false,
          "steppedLine": false,
          "targets": [
            {
              "expr": "sum by (kubernetes_pod_name) (redis_connected_clients)",
              "format": "time_series",
              "intervalFactor": 2,
              "legendFormat": "{{kubernetes_pod_name}}",
              "metric": "",
              "refId": "A",
              "step": 2
            }
          ],
          "thresholds": [],
          "timeFrom": "1m",
          "timeRegions": [],
          "timeShift": null,
          "title": "Clients",
          "tooltip": {
            "shared": true,
            "sort": 0,
            "value_type": "individual"
          },
          "transparent": true,
          "type": "graph",
          "xaxis": {
            "buckets": null,
            "mode": "time",
            "name": null,
            "show": true,
            "values": []
          },
          "yaxes": [
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            },
            {
              "format": "short",
              "label": null,
              "logBase": 1,
              "max": null,
              "min": null,
              "show": true
            }
          ],
          "yaxis": {
            "align": false,
            "alignLevel": null
          }
        }
      ],
      "refresh": "10s",
      "schemaVersion": 18,
      "style": "dark",
      "tags": [
        "prometheus",
        "redis"
      ],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {
              "text": "10.28.0.12:9121",
              "value": "10.28.0.12:9121"
            },
            "datasource": "Prometheus",
            "definition": "label_values(redis_up, instance)",
            "hide": 0,
            "includeAll": false,
            "label": null,
            "multi": false,
            "name": "instance",
            "options": [],
            "query": "label_values(redis_up, instance)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tags": [],
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          }
        ]
      },
      "time": {
        "from": "now-3h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "browser",
      "title": "Redis",
      "uid": "2bRz1gsWk",
      "version": 1
    }
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/pvc.yaml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
spec:
  accessModes:
    - "ReadWriteOnce"
  resources:
    requests:
      storage: "10Gi"
  storageClassName:
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
  name: open-match-grafana
  namespace: open-match
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/tests/test-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
  name: open-match-grafana-test
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
  name: open-match-grafana-clusterrole
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["configmaps"]
  verbs: ["get", "watch", "list"]
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: open-match-grafana-clusterrolebinding
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
subjects:
  - kind: ServiceAccount
    name: open-match-grafana
    namespace: open-match
roleRef:
  kind: ClusterRole
  name: open-match-grafana-clusterrole
  apiGroup: rbac.authorization.k8s.io
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
rules:
- apiGroups:      ['extensions']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [open-match-grafana]
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/tests/test-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: open-match-grafana-test
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
rules:
- apiGroups:      ['policy']
  resources:      ['podsecuritypolicies']
  verbs:          ['use']
  resourceNames:  [open-match-grafana-test]
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: open-match-grafana
subjects:
- kind: ServiceAccount
  name: open-match-grafana
  namespace: open-match
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/tests/test-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: open-match-grafana-test
  labels:
    app: grafana
    chart: grafana-3.5.7
    heritage: Helm
    release: open-match
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: open-match-grafana-test
subjects:
- kind: ServiceAccount
  name: open-match-grafana-test
  namespace: open-match
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
spec:
  type: ClusterIP
  ports:
    - name: service
      port: 3000
      protocol: TCP
      targetPort: 3000

  selector:
    app: grafana
    release: open-match
---
# Source: open-match/templates/swaggerui.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
kind: Service
apiVersion: v1
metadata:
  name: om-swaggerui
  namespace: open-match
  annotations:
    chart: open-match-1.0.0
    heritage: Helm
  labels:
    app: open-match
    component: swaggerui
    release: open-match
spec:
  selector:
    app: open-match
    component: swaggerui
  type: ClusterIP
  ports:
  - name: http
    protocol: TCP
    port: 51500
---
# Source: open-match/charts/open-match-telemetry/charts/grafana/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: open-match-grafana
  namespace: open-match
  labels:
    app: grafana
    chart: grafana-3.5.7
    release: open-match
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
      release: open-match
  strategy:
    rollingUpdate: null
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: grafana
        release: open-match
      annotations:
        checksum/config: 66fd5b8516547c7a253cb0f9d6561ab2111cb561c2eac72edb15d110d75b0869
        checksum/dashboards-json-config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
        checksum/sc-dashboard-provider-config: 785568d36ab4f4b04545986b68003b31fbaec50215f569a46ca5d462cf61bd8d
        checksum/secret: 402d070bd4b7eae24b3a5e634c5f010b45a59429c2a9e7a5aea61a6c0f5b325c
    spec:
      serviceAccountName: open-match-grafana
      securityContext:
        fsGroup: 472
        runAsUser: 472
      initContainers:
        - name: init-chown-data
          image: "busybox:1.30"
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
          command: ["chown", "-R", "472:472", "/var/lib/grafana"]
          resources:
            {}
          volumeMounts:
            - name: storage
              mountPath: "/var/lib/grafana"
      containers:
        - name: grafana-sc-dashboard
          image: "kiwigrid/k8s-sidecar:0.0.16"
          imagePullPolicy: IfNotPresent
          env:
            - name: LABEL
              value: "grafana_dashboard"
            - name: FOLDER
              value: "/tmp/dashboards"
          resources:
            {}
          volumeMounts:
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
        - name: grafana
          image: "grafana/grafana:6.2.4"
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: config
              mountPath: "/etc/grafana/grafana.ini"
              subPath: grafana.ini
            - name: ldap
              mountPath: "/etc/grafana/ldap.toml"
              subPath: ldap.toml
            - name: storage
              mountPath: "/var/lib/grafana"
            - name: config
              mountPath: "/etc/grafana/provisioning/datasources/datasources.yaml"
              subPath: datasources.yaml
            - name: sc-dashboard-volume
              mountPath: "/tmp/dashboards"
            - name: sc-dashboard-provider
              mountPath: "/etc/grafana/provisioning/dashboards/sc-dashboardproviders.yaml"
              subPath: provider.yaml
          ports:
            - name: service
              containerPort: 3000
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SECURITY_ADMIN_USER
              valueFrom:
                secretKeyRef:
                  name: open-match-grafana
                  key: admin-user
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: open-match-grafana
                  key: admin-password
            - name: GF_INSTALL_PLUGINS
              valueFrom:
                configMapKeyRef:
                  name: open-match-grafana
                  key: plugins
          livenessProbe:
            failureThreshold: 10
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
          resources:
            {}
      volumes:
        - name: config
          configMap:
            name: open-match-grafana
        - name: ldap
          secret:
            secretName: open-match-grafana
            items:
              - key: ldap-toml
                path: ldap.toml
        - name: storage
          persistentVolumeClaim:
            claimName: open-match-grafana
        - name: sc-dashboard-volume
          emptyDir: {}
        - name: sc-dashboard-provider
          configMap:
            name: open-match-grafana-config-dashboards
---
# Source: open-match/templates/swaggerui.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: om-swaggerui
  namespace: open-match
  annotations:
    chart: open-match-1.0.0
    heritage: Helm
  labels:
    app: open-match
    component: swaggerui
    release: open-match
spec:
  replicas: 1
  selector:
    matchLabels:
      app: open-match
      component: swaggerui
  template:
    metadata:
      namespace: open-match
      annotations:
        chart: open-match-1.0.0
        heritage: Helm
      labels:
        app: open-match
        component: swaggerui
        release: open-match
    spec:
      
      volumes:
        
        - name: om-config-volume-default
          configMap:
            name: om-configmap-default
        - name: om-config-volume-override
          configMap:
            name: om-configmap-override
        
      serviceAccountName: open-match-unprivileged-service
      containers:
      - name: om-swaggerui
        volumeMounts:
          
          - name: om-config-volume-default
            mountPath: /app/config/default
          - name: om-config-volume-override
            mountPath: /app/config/override
          
        image: "gcr.io/open-match-public-images/openmatch-swaggerui:1.0.0"
        ports:
        - name: http
          containerPort: 51500
        imagePullPolicy: Always
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz
            port: 51500
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /healthz?readiness=true
            port: 51500
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2
---
# Source: open-match/templates/backend.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/frontend.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/om-configmap-default.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/om-configmap-override.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/podsecuritypolicy.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/query.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/service-account.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/synchronizer.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/tests/om-test-role-binding.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/tests/om-test-role.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/tests/om-test-service-account.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/tests/om-test.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
# Source: open-match/templates/tls-secret.yaml
# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
